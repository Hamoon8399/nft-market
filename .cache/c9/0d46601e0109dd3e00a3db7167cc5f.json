{"id":"../node_modules/near-api-js/lib/account.js","dependencies":[{"name":"/home/hamoon/Learn/Near/nft-market/package.json","includedInParent":true,"mtime":1643346710881},{"name":"/home/hamoon/Learn/Near/nft-market/node_modules/near-api-js/package.json","includedInParent":true,"mtime":1643192112644},{"name":"bn.js","loc":{"line":7,"column":40},"parent":"/home/hamoon/Learn/Near/nft-market/node_modules/near-api-js/lib/account.js","resolved":"/home/hamoon/Learn/Near/nft-market/node_modules/near-api-js/node_modules/bn.js/lib/bn.js"},{"name":"depd","loc":{"line":8,"column":39},"parent":"/home/hamoon/Learn/Near/nft-market/node_modules/near-api-js/lib/account.js","resolved":"/home/hamoon/Learn/Near/nft-market/node_modules/near-api-js/node_modules/depd/lib/browser/index.js"},{"name":"./transaction","loc":{"line":9,"column":30},"parent":"/home/hamoon/Learn/Near/nft-market/node_modules/near-api-js/lib/account.js","resolved":"/home/hamoon/Learn/Near/nft-market/node_modules/near-api-js/lib/transaction.js"},{"name":"./providers","loc":{"line":10,"column":28},"parent":"/home/hamoon/Learn/Near/nft-market/node_modules/near-api-js/lib/account.js","resolved":"/home/hamoon/Learn/Near/nft-market/node_modules/near-api-js/lib/providers/index.js"},{"name":"borsh","loc":{"line":11,"column":24},"parent":"/home/hamoon/Learn/Near/nft-market/node_modules/near-api-js/lib/account.js","resolved":"/home/hamoon/Learn/Near/nft-market/node_modules/borsh/lib/index.js"},{"name":"./utils/key_pair","loc":{"line":12,"column":27},"parent":"/home/hamoon/Learn/Near/nft-market/node_modules/near-api-js/lib/account.js","resolved":"/home/hamoon/Learn/Near/nft-market/node_modules/near-api-js/lib/utils/key_pair.js"},{"name":"./utils/errors","loc":{"line":13,"column":25},"parent":"/home/hamoon/Learn/Near/nft-market/node_modules/near-api-js/lib/account.js","resolved":"/home/hamoon/Learn/Near/nft-market/node_modules/near-api-js/lib/utils/errors.js"},{"name":"./utils/rpc_errors","loc":{"line":14,"column":29},"parent":"/home/hamoon/Learn/Near/nft-market/node_modules/near-api-js/lib/account.js","resolved":"/home/hamoon/Learn/Near/nft-market/node_modules/near-api-js/lib/utils/rpc_errors.js"},{"name":"./utils/exponential-backoff","loc":{"line":15,"column":54},"parent":"/home/hamoon/Learn/Near/nft-market/node_modules/near-api-js/lib/account.js","resolved":"/home/hamoon/Learn/Near/nft-market/node_modules/near-api-js/lib/utils/exponential-backoff.js"},{"name":"buffer","parent":"/home/hamoon/Learn/Near/nft-market/node_modules/near-api-js/lib/account.js","resolved":"/home/hamoon/Learn/Near/nft-market/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Account = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\nconst transaction_1 = require(\"./transaction\");\nconst providers_1 = require(\"./providers\");\nconst borsh_1 = require(\"borsh\");\nconst key_pair_1 = require(\"./utils/key_pair\");\nconst errors_1 = require(\"./utils/errors\");\nconst rpc_errors_1 = require(\"./utils/rpc_errors\");\nconst exponential_backoff_1 = __importDefault(require(\"./utils/exponential-backoff\"));\n// Default amount of gas to be sent with the function calls. Used to pay for the fees\n// incurred while running the contract execution. The unused amount will be refunded back to\n// the originator.\n// Due to protocol changes that charge upfront for the maximum possible gas price inflation due to\n// full blocks, the price of max_prepaid_gas is decreased to `300 * 10**12`.\n// For discussion see https://github.com/nearprotocol/NEPs/issues/67\nconst DEFAULT_FUNC_CALL_GAS = new bn_js_1.default('30000000000000');\n// Default number of retries with different nonce before giving up on a transaction.\nconst TX_NONCE_RETRY_NUMBER = 12;\n// Default wait until next retry in millis.\nconst TX_NONCE_RETRY_WAIT = 500;\n// Exponential back off for waiting to retry.\nconst TX_NONCE_RETRY_WAIT_BACKOFF = 1.5;\nfunction parseJsonFromRawResponse(response) {\n    return JSON.parse(Buffer.from(response).toString());\n}\n/**\n * This class provides common account related RPC calls including signing transactions with a {@link KeyPair}.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#account}\n * @hint Use {@link WalletConnection} in the browser to redirect to {@link https://docs.near.org/docs/tools/near-wallet | NEAR Wallet} for Account/key management using the {@link BrowserLocalStorageKeyStore}.\n * @see {@link https://nomicon.io/DataStructures/Account.html | Account Spec}\n */\nclass Account {\n    constructor(connection, accountId) {\n        /** @hidden */\n        this.accessKeyByPublicKeyCache = {};\n        this.connection = connection;\n        this.accountId = accountId;\n    }\n    /** @hidden */\n    get ready() {\n        const deprecate = depd_1.default('Account.ready()');\n        deprecate('not needed anymore, always ready');\n        return Promise.resolve();\n    }\n    async fetchState() {\n        const deprecate = depd_1.default('Account.fetchState()');\n        deprecate('use `Account.state()` instead');\n    }\n    /**\n     * Returns basic NEAR account information via the `view_account` RPC query method\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#view-account}\n     */\n    async state() {\n        return this.connection.provider.query({\n            request_type: 'view_account',\n            account_id: this.accountId,\n            finality: 'optimistic'\n        });\n    }\n    /** @hidden */\n    printLogsAndFailures(contractId, results) {\n        for (const result of results) {\n            console.log(`Receipt${result.receiptIds.length > 1 ? 's' : ''}: ${result.receiptIds.join(', ')}`);\n            this.printLogs(contractId, result.logs, '\\t');\n            if (result.failure) {\n                console.warn(`\\tFailure [${contractId}]: ${result.failure}`);\n            }\n        }\n    }\n    /** @hidden */\n    printLogs(contractId, logs, prefix = '') {\n        for (const log of logs) {\n            console.log(`${prefix}Log [${contractId}]: ${log}`);\n        }\n    }\n    /**\n     * Create a signed transaction which can be broadcast to the network\n     * @param receiverId NEAR account receiving the transaction\n     * @param actions list of actions to perform as part of the transaction\n     * @see {@link JsonRpcProvider.sendTransaction}\n     */\n    async signTransaction(receiverId, actions) {\n        const accessKeyInfo = await this.findAccessKey(receiverId, actions);\n        if (!accessKeyInfo) {\n            throw new providers_1.TypedError(`Can not sign transactions for account ${this.accountId} on network ${this.connection.networkId}, no matching key pair found in ${this.connection.signer}.`, 'KeyNotFound');\n        }\n        const { accessKey } = accessKeyInfo;\n        const block = await this.connection.provider.block({ finality: 'final' });\n        const blockHash = block.header.hash;\n        const nonce = ++accessKey.nonce;\n        return await transaction_1.signTransaction(receiverId, nonce, actions, borsh_1.baseDecode(blockHash), this.connection.signer, this.accountId, this.connection.networkId);\n    }\n    signAndSendTransaction(...args) {\n        if (typeof args[0] === 'string') {\n            return this.signAndSendTransactionV1(args[0], args[1]);\n        }\n        else {\n            return this.signAndSendTransactionV2(args[0]);\n        }\n    }\n    signAndSendTransactionV1(receiverId, actions) {\n        const deprecate = depd_1.default('Account.signAndSendTransaction(receiverId, actions');\n        deprecate('use `Account.signAndSendTransaction(SignAndSendTransactionOptions)` instead');\n        return this.signAndSendTransactionV2({ receiverId, actions });\n    }\n    async signAndSendTransactionV2({ receiverId, actions }) {\n        let txHash, signedTx;\n        // TODO: TX_NONCE (different constants for different uses of exponentialBackoff?)\n        const result = await exponential_backoff_1.default(TX_NONCE_RETRY_WAIT, TX_NONCE_RETRY_NUMBER, TX_NONCE_RETRY_WAIT_BACKOFF, async () => {\n            [txHash, signedTx] = await this.signTransaction(receiverId, actions);\n            const publicKey = signedTx.transaction.publicKey;\n            try {\n                return await this.connection.provider.sendTransaction(signedTx);\n            }\n            catch (error) {\n                if (error.type === 'InvalidNonce') {\n                    console.warn(`Retrying transaction ${receiverId}:${borsh_1.baseEncode(txHash)} with new nonce.`);\n                    delete this.accessKeyByPublicKeyCache[publicKey.toString()];\n                    return null;\n                }\n                error.context = new providers_1.ErrorContext(borsh_1.baseEncode(txHash));\n                throw error;\n            }\n        });\n        if (!result) {\n            // TODO: This should have different code actually, as means \"transaction not submitted for sure\"\n            throw new providers_1.TypedError('nonce retries exceeded for transaction. This usually means there are too many parallel requests with the same access key.', 'RetriesExceeded');\n        }\n        const flatLogs = [result.transaction_outcome, ...result.receipts_outcome].reduce((acc, it) => {\n            if (it.outcome.logs.length ||\n                (typeof it.outcome.status === 'object' && typeof it.outcome.status.Failure === 'object')) {\n                return acc.concat({\n                    'receiptIds': it.outcome.receipt_ids,\n                    'logs': it.outcome.logs,\n                    'failure': typeof it.outcome.status.Failure != 'undefined' ? rpc_errors_1.parseRpcError(it.outcome.status.Failure) : null\n                });\n            }\n            else\n                return acc;\n        }, []);\n        this.printLogsAndFailures(signedTx.transaction.receiverId, flatLogs);\n        if (typeof result.status === 'object' && typeof result.status.Failure === 'object') {\n            // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n            if (result.status.Failure.error_message && result.status.Failure.error_type) {\n                throw new providers_1.TypedError(`Transaction ${result.transaction_outcome.id} failed. ${result.status.Failure.error_message}`, result.status.Failure.error_type);\n            }\n            else {\n                throw rpc_errors_1.parseResultError(result);\n            }\n        }\n        // TODO: if Tx is Unknown or Started.\n        return result;\n    }\n    /**\n     * Finds the {@link AccessKeyView} associated with the accounts {@link PublicKey} stored in the {@link KeyStore}.\n     *\n     * @todo Find matching access key based on transaction (i.e. receiverId and actions)\n     *\n     * @param receiverId currently unused (see todo)\n     * @param actions currently unused (see todo)\n     * @returns `{ publicKey PublicKey; accessKey: AccessKeyView }`\n     */\n    async findAccessKey(receiverId, actions) {\n        // TODO: Find matching access key based on transaction (i.e. receiverId and actions)\n        const publicKey = await this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);\n        if (!publicKey) {\n            return null;\n        }\n        const cachedAccessKey = this.accessKeyByPublicKeyCache[publicKey.toString()];\n        if (cachedAccessKey !== undefined) {\n            return { publicKey, accessKey: cachedAccessKey };\n        }\n        try {\n            const accessKey = await this.connection.provider.query({\n                request_type: 'view_access_key',\n                account_id: this.accountId,\n                public_key: publicKey.toString(),\n                finality: 'optimistic'\n            });\n            // this function can be called multiple times and retrieve the same access key\n            // this checks to see if the access key was already retrieved and cached while\n            // the above network call was in flight. To keep nonce values in line, we return\n            // the cached access key.\n            if (this.accessKeyByPublicKeyCache[publicKey.toString()]) {\n                return { publicKey, accessKey: this.accessKeyByPublicKeyCache[publicKey.toString()] };\n            }\n            this.accessKeyByPublicKeyCache[publicKey.toString()] = accessKey;\n            return { publicKey, accessKey };\n        }\n        catch (e) {\n            if (e.type == 'AccessKeyDoesNotExist') {\n                return null;\n            }\n            throw e;\n        }\n    }\n    /**\n     * Create a new account and deploy a contract to it\n     *\n     * @param contractId NEAR account where the contract is deployed\n     * @param publicKey The public key to add to the created contract account\n     * @param data The compiled contract code\n     */\n    async createAndDeployContract(contractId, publicKey, data, amount) {\n        const accessKey = transaction_1.fullAccessKey();\n        await this.signAndSendTransaction({\n            receiverId: contractId,\n            actions: [transaction_1.createAccount(), transaction_1.transfer(amount), transaction_1.addKey(key_pair_1.PublicKey.from(publicKey), accessKey), transaction_1.deployContract(data)]\n        });\n        const contractAccount = new Account(this.connection, contractId);\n        return contractAccount;\n    }\n    /**\n     * @param receiverId NEAR account receiving Ⓝ\n     * @param amount Amount to send in yoctoⓃ\n     */\n    async sendMoney(receiverId, amount) {\n        return this.signAndSendTransaction({\n            receiverId,\n            actions: [transaction_1.transfer(amount)]\n        });\n    }\n    /**\n     * @param newAccountId NEAR account name to be created\n     * @param publicKey A public key created from the masterAccount\n     */\n    async createAccount(newAccountId, publicKey, amount) {\n        const accessKey = transaction_1.fullAccessKey();\n        return this.signAndSendTransaction({\n            receiverId: newAccountId,\n            actions: [transaction_1.createAccount(), transaction_1.transfer(amount), transaction_1.addKey(key_pair_1.PublicKey.from(publicKey), accessKey)]\n        });\n    }\n    /**\n     * @param beneficiaryId The NEAR account that will receive the remaining Ⓝ balance from the account being deleted\n     */\n    async deleteAccount(beneficiaryId) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.deleteAccount(beneficiaryId)]\n        });\n    }\n    /**\n     * @param data The compiled contract code\n     */\n    async deployContract(data) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.deployContract(data)]\n        });\n    }\n    async functionCall(...args) {\n        if (typeof args[0] === 'string') {\n            return this.functionCallV1(args[0], args[1], args[2], args[3], args[4]);\n        }\n        else {\n            return this.functionCallV2(args[0]);\n        }\n    }\n    functionCallV1(contractId, methodName, args, gas, amount) {\n        const deprecate = depd_1.default('Account.functionCall(contractId, methodName, args, gas, amount)');\n        deprecate('use `Account.functionCall(FunctionCallOptions)` instead');\n        args = args || {};\n        this.validateArgs(args);\n        return this.signAndSendTransaction({\n            receiverId: contractId,\n            actions: [transaction_1.functionCall(methodName, args, gas || DEFAULT_FUNC_CALL_GAS, amount)]\n        });\n    }\n    functionCallV2({ contractId, methodName, args = {}, gas = DEFAULT_FUNC_CALL_GAS, attachedDeposit, walletMeta, walletCallbackUrl }) {\n        this.validateArgs(args);\n        return this.signAndSendTransaction({\n            receiverId: contractId,\n            actions: [transaction_1.functionCall(methodName, args, gas, attachedDeposit)],\n            walletMeta,\n            walletCallbackUrl\n        });\n    }\n    /**\n     * @see {@link https://docs.near.org/docs/concepts/account#access-keys}\n     * @todo expand this API to support more options.\n     * @param publicKey A public key to be associated with the contract\n     * @param contractId NEAR account where the contract is deployed\n     * @param methodNames The method names on the contract that should be allowed to be called. Pass null for no method names and '' or [] for any method names.\n     * @param amount Payment in yoctoⓃ that is sent to the contract during this function call\n     */\n    async addKey(publicKey, contractId, methodNames, amount) {\n        if (!methodNames) {\n            methodNames = [];\n        }\n        if (!Array.isArray(methodNames)) {\n            methodNames = [methodNames];\n        }\n        let accessKey;\n        if (!contractId) {\n            accessKey = transaction_1.fullAccessKey();\n        }\n        else {\n            accessKey = transaction_1.functionCallAccessKey(contractId, methodNames, amount);\n        }\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.addKey(key_pair_1.PublicKey.from(publicKey), accessKey)]\n        });\n    }\n    /**\n     * @param publicKey The public key to be deleted\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async deleteKey(publicKey) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.deleteKey(key_pair_1.PublicKey.from(publicKey))]\n        });\n    }\n    /**\n     * @see {@link https://docs.near.org/docs/validator/staking-overview}\n     *\n     * @param publicKey The public key for the account that's staking\n     * @param amount The account to stake in yoctoⓃ\n     */\n    async stake(publicKey, amount) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.stake(amount, key_pair_1.PublicKey.from(publicKey))]\n        });\n    }\n    /** @hidden */\n    validateArgs(args) {\n        const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n        if (isUint8Array) {\n            return;\n        }\n        if (Array.isArray(args) || typeof args !== 'object') {\n            throw new errors_1.PositionalArgsError();\n        }\n    }\n    /**\n     * Invoke a contract view function using the RPC API.\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#call-a-contract-function}\n     *\n     * @param contractId NEAR account where the contract is deployed\n     * @param methodName The view-only method (no state mutations) name on the contract as it is written in the contract code\n     * @param args Any arguments to the view contract method, wrapped in JSON\n     * @returns {Promise<any>}\n     */\n    async viewFunction(contractId, methodName, args = {}, { parse = parseJsonFromRawResponse } = {}) {\n        this.validateArgs(args);\n        const result = await this.connection.provider.query({\n            request_type: 'call_function',\n            account_id: contractId,\n            method_name: methodName,\n            args_base64: Buffer.from(JSON.stringify(args)).toString('base64'),\n            finality: 'optimistic'\n        });\n        if (result.logs) {\n            this.printLogs(contractId, result.logs);\n        }\n        return result.result && result.result.length > 0 && parse(Buffer.from(result.result));\n    }\n    /**\n     * Returns the state (key value pairs) of this account's contract based on the key prefix.\n     * Pass an empty string for prefix if you would like to return the entire state.\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#view-contract-state}\n     *\n     * @param prefix allows to filter which keys should be returned. Empty prefix means all keys. String prefix is utf-8 encoded.\n     * @param blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n     */\n    async viewState(prefix, blockQuery = { finality: 'optimistic' }) {\n        const { values } = await this.connection.provider.query({\n            request_type: 'view_state',\n            ...blockQuery,\n            account_id: this.accountId,\n            prefix_base64: Buffer.from(prefix).toString('base64')\n        });\n        return values.map(({ key, value }) => ({\n            key: Buffer.from(key, 'base64'),\n            value: Buffer.from(value, 'base64')\n        }));\n    }\n    /**\n     * Get all access keys for the account\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#view-access-key-list}\n     */\n    async getAccessKeys() {\n        const response = await this.connection.provider.query({\n            request_type: 'view_access_key_list',\n            account_id: this.accountId,\n            finality: 'optimistic'\n        });\n        // A breaking API change introduced extra information into the\n        // response, so it now returns an object with a `keys` field instead\n        // of an array: https://github.com/nearprotocol/nearcore/pull/1789\n        if (Array.isArray(response)) {\n            return response;\n        }\n        return response.keys;\n    }\n    /**\n     * Returns a list of authorized apps\n     * @todo update the response value to return all the different keys, not just app keys.\n     */\n    async getAccountDetails() {\n        // TODO: update the response value to return all the different keys, not just app keys.\n        // Also if we need this function, or getAccessKeys is good enough.\n        const accessKeys = await this.getAccessKeys();\n        const authorizedApps = accessKeys\n            .filter(item => item.access_key.permission !== 'FullAccess')\n            .map(item => {\n            const perm = item.access_key.permission;\n            return {\n                contractId: perm.FunctionCall.receiver_id,\n                amount: perm.FunctionCall.allowance,\n                publicKey: item.public_key,\n            };\n        });\n        return { authorizedApps };\n    }\n    /**\n     * Returns calculated account balance\n     */\n    async getAccountBalance() {\n        const protocolConfig = await this.connection.provider.experimental_protocolConfig({ finality: 'final' });\n        const state = await this.state();\n        const costPerByte = new bn_js_1.default(protocolConfig.runtime_config.storage_amount_per_byte);\n        const stateStaked = new bn_js_1.default(state.storage_usage).mul(costPerByte);\n        const staked = new bn_js_1.default(state.locked);\n        const totalBalance = new bn_js_1.default(state.amount).add(staked);\n        const availableBalance = totalBalance.sub(bn_js_1.default.max(staked, stateStaked));\n        return {\n            total: totalBalance.toString(),\n            stateStaked: stateStaked.toString(),\n            staked: staked.toString(),\n            available: availableBalance.toString()\n        };\n    }\n}\nexports.Account = Account;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/near-api-js/lib/account.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}}],"sources":{"../node_modules/near-api-js/lib/account.js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Account = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\nconst transaction_1 = require(\"./transaction\");\nconst providers_1 = require(\"./providers\");\nconst borsh_1 = require(\"borsh\");\nconst key_pair_1 = require(\"./utils/key_pair\");\nconst errors_1 = require(\"./utils/errors\");\nconst rpc_errors_1 = require(\"./utils/rpc_errors\");\nconst exponential_backoff_1 = __importDefault(require(\"./utils/exponential-backoff\"));\n// Default amount of gas to be sent with the function calls. Used to pay for the fees\n// incurred while running the contract execution. The unused amount will be refunded back to\n// the originator.\n// Due to protocol changes that charge upfront for the maximum possible gas price inflation due to\n// full blocks, the price of max_prepaid_gas is decreased to `300 * 10**12`.\n// For discussion see https://github.com/nearprotocol/NEPs/issues/67\nconst DEFAULT_FUNC_CALL_GAS = new bn_js_1.default('30000000000000');\n// Default number of retries with different nonce before giving up on a transaction.\nconst TX_NONCE_RETRY_NUMBER = 12;\n// Default wait until next retry in millis.\nconst TX_NONCE_RETRY_WAIT = 500;\n// Exponential back off for waiting to retry.\nconst TX_NONCE_RETRY_WAIT_BACKOFF = 1.5;\nfunction parseJsonFromRawResponse(response) {\n    return JSON.parse(Buffer.from(response).toString());\n}\n/**\n * This class provides common account related RPC calls including signing transactions with a {@link KeyPair}.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#account}\n * @hint Use {@link WalletConnection} in the browser to redirect to {@link https://docs.near.org/docs/tools/near-wallet | NEAR Wallet} for Account/key management using the {@link BrowserLocalStorageKeyStore}.\n * @see {@link https://nomicon.io/DataStructures/Account.html | Account Spec}\n */\nclass Account {\n    constructor(connection, accountId) {\n        /** @hidden */\n        this.accessKeyByPublicKeyCache = {};\n        this.connection = connection;\n        this.accountId = accountId;\n    }\n    /** @hidden */\n    get ready() {\n        const deprecate = depd_1.default('Account.ready()');\n        deprecate('not needed anymore, always ready');\n        return Promise.resolve();\n    }\n    async fetchState() {\n        const deprecate = depd_1.default('Account.fetchState()');\n        deprecate('use `Account.state()` instead');\n    }\n    /**\n     * Returns basic NEAR account information via the `view_account` RPC query method\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#view-account}\n     */\n    async state() {\n        return this.connection.provider.query({\n            request_type: 'view_account',\n            account_id: this.accountId,\n            finality: 'optimistic'\n        });\n    }\n    /** @hidden */\n    printLogsAndFailures(contractId, results) {\n        for (const result of results) {\n            console.log(`Receipt${result.receiptIds.length > 1 ? 's' : ''}: ${result.receiptIds.join(', ')}`);\n            this.printLogs(contractId, result.logs, '\\t');\n            if (result.failure) {\n                console.warn(`\\tFailure [${contractId}]: ${result.failure}`);\n            }\n        }\n    }\n    /** @hidden */\n    printLogs(contractId, logs, prefix = '') {\n        for (const log of logs) {\n            console.log(`${prefix}Log [${contractId}]: ${log}`);\n        }\n    }\n    /**\n     * Create a signed transaction which can be broadcast to the network\n     * @param receiverId NEAR account receiving the transaction\n     * @param actions list of actions to perform as part of the transaction\n     * @see {@link JsonRpcProvider.sendTransaction}\n     */\n    async signTransaction(receiverId, actions) {\n        const accessKeyInfo = await this.findAccessKey(receiverId, actions);\n        if (!accessKeyInfo) {\n            throw new providers_1.TypedError(`Can not sign transactions for account ${this.accountId} on network ${this.connection.networkId}, no matching key pair found in ${this.connection.signer}.`, 'KeyNotFound');\n        }\n        const { accessKey } = accessKeyInfo;\n        const block = await this.connection.provider.block({ finality: 'final' });\n        const blockHash = block.header.hash;\n        const nonce = ++accessKey.nonce;\n        return await transaction_1.signTransaction(receiverId, nonce, actions, borsh_1.baseDecode(blockHash), this.connection.signer, this.accountId, this.connection.networkId);\n    }\n    signAndSendTransaction(...args) {\n        if (typeof args[0] === 'string') {\n            return this.signAndSendTransactionV1(args[0], args[1]);\n        }\n        else {\n            return this.signAndSendTransactionV2(args[0]);\n        }\n    }\n    signAndSendTransactionV1(receiverId, actions) {\n        const deprecate = depd_1.default('Account.signAndSendTransaction(receiverId, actions');\n        deprecate('use `Account.signAndSendTransaction(SignAndSendTransactionOptions)` instead');\n        return this.signAndSendTransactionV2({ receiverId, actions });\n    }\n    async signAndSendTransactionV2({ receiverId, actions }) {\n        let txHash, signedTx;\n        // TODO: TX_NONCE (different constants for different uses of exponentialBackoff?)\n        const result = await exponential_backoff_1.default(TX_NONCE_RETRY_WAIT, TX_NONCE_RETRY_NUMBER, TX_NONCE_RETRY_WAIT_BACKOFF, async () => {\n            [txHash, signedTx] = await this.signTransaction(receiverId, actions);\n            const publicKey = signedTx.transaction.publicKey;\n            try {\n                return await this.connection.provider.sendTransaction(signedTx);\n            }\n            catch (error) {\n                if (error.type === 'InvalidNonce') {\n                    console.warn(`Retrying transaction ${receiverId}:${borsh_1.baseEncode(txHash)} with new nonce.`);\n                    delete this.accessKeyByPublicKeyCache[publicKey.toString()];\n                    return null;\n                }\n                error.context = new providers_1.ErrorContext(borsh_1.baseEncode(txHash));\n                throw error;\n            }\n        });\n        if (!result) {\n            // TODO: This should have different code actually, as means \"transaction not submitted for sure\"\n            throw new providers_1.TypedError('nonce retries exceeded for transaction. This usually means there are too many parallel requests with the same access key.', 'RetriesExceeded');\n        }\n        const flatLogs = [result.transaction_outcome, ...result.receipts_outcome].reduce((acc, it) => {\n            if (it.outcome.logs.length ||\n                (typeof it.outcome.status === 'object' && typeof it.outcome.status.Failure === 'object')) {\n                return acc.concat({\n                    'receiptIds': it.outcome.receipt_ids,\n                    'logs': it.outcome.logs,\n                    'failure': typeof it.outcome.status.Failure != 'undefined' ? rpc_errors_1.parseRpcError(it.outcome.status.Failure) : null\n                });\n            }\n            else\n                return acc;\n        }, []);\n        this.printLogsAndFailures(signedTx.transaction.receiverId, flatLogs);\n        if (typeof result.status === 'object' && typeof result.status.Failure === 'object') {\n            // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n            if (result.status.Failure.error_message && result.status.Failure.error_type) {\n                throw new providers_1.TypedError(`Transaction ${result.transaction_outcome.id} failed. ${result.status.Failure.error_message}`, result.status.Failure.error_type);\n            }\n            else {\n                throw rpc_errors_1.parseResultError(result);\n            }\n        }\n        // TODO: if Tx is Unknown or Started.\n        return result;\n    }\n    /**\n     * Finds the {@link AccessKeyView} associated with the accounts {@link PublicKey} stored in the {@link KeyStore}.\n     *\n     * @todo Find matching access key based on transaction (i.e. receiverId and actions)\n     *\n     * @param receiverId currently unused (see todo)\n     * @param actions currently unused (see todo)\n     * @returns `{ publicKey PublicKey; accessKey: AccessKeyView }`\n     */\n    async findAccessKey(receiverId, actions) {\n        // TODO: Find matching access key based on transaction (i.e. receiverId and actions)\n        const publicKey = await this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);\n        if (!publicKey) {\n            return null;\n        }\n        const cachedAccessKey = this.accessKeyByPublicKeyCache[publicKey.toString()];\n        if (cachedAccessKey !== undefined) {\n            return { publicKey, accessKey: cachedAccessKey };\n        }\n        try {\n            const accessKey = await this.connection.provider.query({\n                request_type: 'view_access_key',\n                account_id: this.accountId,\n                public_key: publicKey.toString(),\n                finality: 'optimistic'\n            });\n            // this function can be called multiple times and retrieve the same access key\n            // this checks to see if the access key was already retrieved and cached while\n            // the above network call was in flight. To keep nonce values in line, we return\n            // the cached access key.\n            if (this.accessKeyByPublicKeyCache[publicKey.toString()]) {\n                return { publicKey, accessKey: this.accessKeyByPublicKeyCache[publicKey.toString()] };\n            }\n            this.accessKeyByPublicKeyCache[publicKey.toString()] = accessKey;\n            return { publicKey, accessKey };\n        }\n        catch (e) {\n            if (e.type == 'AccessKeyDoesNotExist') {\n                return null;\n            }\n            throw e;\n        }\n    }\n    /**\n     * Create a new account and deploy a contract to it\n     *\n     * @param contractId NEAR account where the contract is deployed\n     * @param publicKey The public key to add to the created contract account\n     * @param data The compiled contract code\n     */\n    async createAndDeployContract(contractId, publicKey, data, amount) {\n        const accessKey = transaction_1.fullAccessKey();\n        await this.signAndSendTransaction({\n            receiverId: contractId,\n            actions: [transaction_1.createAccount(), transaction_1.transfer(amount), transaction_1.addKey(key_pair_1.PublicKey.from(publicKey), accessKey), transaction_1.deployContract(data)]\n        });\n        const contractAccount = new Account(this.connection, contractId);\n        return contractAccount;\n    }\n    /**\n     * @param receiverId NEAR account receiving Ⓝ\n     * @param amount Amount to send in yoctoⓃ\n     */\n    async sendMoney(receiverId, amount) {\n        return this.signAndSendTransaction({\n            receiverId,\n            actions: [transaction_1.transfer(amount)]\n        });\n    }\n    /**\n     * @param newAccountId NEAR account name to be created\n     * @param publicKey A public key created from the masterAccount\n     */\n    async createAccount(newAccountId, publicKey, amount) {\n        const accessKey = transaction_1.fullAccessKey();\n        return this.signAndSendTransaction({\n            receiverId: newAccountId,\n            actions: [transaction_1.createAccount(), transaction_1.transfer(amount), transaction_1.addKey(key_pair_1.PublicKey.from(publicKey), accessKey)]\n        });\n    }\n    /**\n     * @param beneficiaryId The NEAR account that will receive the remaining Ⓝ balance from the account being deleted\n     */\n    async deleteAccount(beneficiaryId) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.deleteAccount(beneficiaryId)]\n        });\n    }\n    /**\n     * @param data The compiled contract code\n     */\n    async deployContract(data) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.deployContract(data)]\n        });\n    }\n    async functionCall(...args) {\n        if (typeof args[0] === 'string') {\n            return this.functionCallV1(args[0], args[1], args[2], args[3], args[4]);\n        }\n        else {\n            return this.functionCallV2(args[0]);\n        }\n    }\n    functionCallV1(contractId, methodName, args, gas, amount) {\n        const deprecate = depd_1.default('Account.functionCall(contractId, methodName, args, gas, amount)');\n        deprecate('use `Account.functionCall(FunctionCallOptions)` instead');\n        args = args || {};\n        this.validateArgs(args);\n        return this.signAndSendTransaction({\n            receiverId: contractId,\n            actions: [transaction_1.functionCall(methodName, args, gas || DEFAULT_FUNC_CALL_GAS, amount)]\n        });\n    }\n    functionCallV2({ contractId, methodName, args = {}, gas = DEFAULT_FUNC_CALL_GAS, attachedDeposit, walletMeta, walletCallbackUrl }) {\n        this.validateArgs(args);\n        return this.signAndSendTransaction({\n            receiverId: contractId,\n            actions: [transaction_1.functionCall(methodName, args, gas, attachedDeposit)],\n            walletMeta,\n            walletCallbackUrl\n        });\n    }\n    /**\n     * @see {@link https://docs.near.org/docs/concepts/account#access-keys}\n     * @todo expand this API to support more options.\n     * @param publicKey A public key to be associated with the contract\n     * @param contractId NEAR account where the contract is deployed\n     * @param methodNames The method names on the contract that should be allowed to be called. Pass null for no method names and '' or [] for any method names.\n     * @param amount Payment in yoctoⓃ that is sent to the contract during this function call\n     */\n    async addKey(publicKey, contractId, methodNames, amount) {\n        if (!methodNames) {\n            methodNames = [];\n        }\n        if (!Array.isArray(methodNames)) {\n            methodNames = [methodNames];\n        }\n        let accessKey;\n        if (!contractId) {\n            accessKey = transaction_1.fullAccessKey();\n        }\n        else {\n            accessKey = transaction_1.functionCallAccessKey(contractId, methodNames, amount);\n        }\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.addKey(key_pair_1.PublicKey.from(publicKey), accessKey)]\n        });\n    }\n    /**\n     * @param publicKey The public key to be deleted\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async deleteKey(publicKey) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.deleteKey(key_pair_1.PublicKey.from(publicKey))]\n        });\n    }\n    /**\n     * @see {@link https://docs.near.org/docs/validator/staking-overview}\n     *\n     * @param publicKey The public key for the account that's staking\n     * @param amount The account to stake in yoctoⓃ\n     */\n    async stake(publicKey, amount) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.stake(amount, key_pair_1.PublicKey.from(publicKey))]\n        });\n    }\n    /** @hidden */\n    validateArgs(args) {\n        const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n        if (isUint8Array) {\n            return;\n        }\n        if (Array.isArray(args) || typeof args !== 'object') {\n            throw new errors_1.PositionalArgsError();\n        }\n    }\n    /**\n     * Invoke a contract view function using the RPC API.\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#call-a-contract-function}\n     *\n     * @param contractId NEAR account where the contract is deployed\n     * @param methodName The view-only method (no state mutations) name on the contract as it is written in the contract code\n     * @param args Any arguments to the view contract method, wrapped in JSON\n     * @returns {Promise<any>}\n     */\n    async viewFunction(contractId, methodName, args = {}, { parse = parseJsonFromRawResponse } = {}) {\n        this.validateArgs(args);\n        const result = await this.connection.provider.query({\n            request_type: 'call_function',\n            account_id: contractId,\n            method_name: methodName,\n            args_base64: Buffer.from(JSON.stringify(args)).toString('base64'),\n            finality: 'optimistic'\n        });\n        if (result.logs) {\n            this.printLogs(contractId, result.logs);\n        }\n        return result.result && result.result.length > 0 && parse(Buffer.from(result.result));\n    }\n    /**\n     * Returns the state (key value pairs) of this account's contract based on the key prefix.\n     * Pass an empty string for prefix if you would like to return the entire state.\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#view-contract-state}\n     *\n     * @param prefix allows to filter which keys should be returned. Empty prefix means all keys. String prefix is utf-8 encoded.\n     * @param blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n     */\n    async viewState(prefix, blockQuery = { finality: 'optimistic' }) {\n        const { values } = await this.connection.provider.query({\n            request_type: 'view_state',\n            ...blockQuery,\n            account_id: this.accountId,\n            prefix_base64: Buffer.from(prefix).toString('base64')\n        });\n        return values.map(({ key, value }) => ({\n            key: Buffer.from(key, 'base64'),\n            value: Buffer.from(value, 'base64')\n        }));\n    }\n    /**\n     * Get all access keys for the account\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#view-access-key-list}\n     */\n    async getAccessKeys() {\n        const response = await this.connection.provider.query({\n            request_type: 'view_access_key_list',\n            account_id: this.accountId,\n            finality: 'optimistic'\n        });\n        // A breaking API change introduced extra information into the\n        // response, so it now returns an object with a `keys` field instead\n        // of an array: https://github.com/nearprotocol/nearcore/pull/1789\n        if (Array.isArray(response)) {\n            return response;\n        }\n        return response.keys;\n    }\n    /**\n     * Returns a list of authorized apps\n     * @todo update the response value to return all the different keys, not just app keys.\n     */\n    async getAccountDetails() {\n        // TODO: update the response value to return all the different keys, not just app keys.\n        // Also if we need this function, or getAccessKeys is good enough.\n        const accessKeys = await this.getAccessKeys();\n        const authorizedApps = accessKeys\n            .filter(item => item.access_key.permission !== 'FullAccess')\n            .map(item => {\n            const perm = item.access_key.permission;\n            return {\n                contractId: perm.FunctionCall.receiver_id,\n                amount: perm.FunctionCall.allowance,\n                publicKey: item.public_key,\n            };\n        });\n        return { authorizedApps };\n    }\n    /**\n     * Returns calculated account balance\n     */\n    async getAccountBalance() {\n        const protocolConfig = await this.connection.provider.experimental_protocolConfig({ finality: 'final' });\n        const state = await this.state();\n        const costPerByte = new bn_js_1.default(protocolConfig.runtime_config.storage_amount_per_byte);\n        const stateStaked = new bn_js_1.default(state.storage_usage).mul(costPerByte);\n        const staked = new bn_js_1.default(state.locked);\n        const totalBalance = new bn_js_1.default(state.amount).add(staked);\n        const availableBalance = totalBalance.sub(bn_js_1.default.max(staked, stateStaked));\n        return {\n            total: totalBalance.toString(),\n            stateStaked: stateStaked.toString(),\n            staked: staked.toString(),\n            available: availableBalance.toString()\n        };\n    }\n}\nexports.Account = Account;\n"},"lineCount":447}},"error":null,"hash":"d4b35cb8122855ff991297887cd2973c","cacheData":{"env":{}}}